<Workspace Version="1.3.3.4111" X="227.371167483383" Y="-207.403373768559" zoom="0.562035829345847" ScaleFactor="1" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="355bd92f-0489-4b0b-bfc4-ee36bb207dc4" type="PythonNodeModels.PythonNode" nickname="Python Script" x="343.145989476484" y="544.590503232323" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="3">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
doc = DocumentManager.Instance.CurrentDBDocument
opt = SpatialElementBoundaryOptions()
doors = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_Doors).WhereElementIsNotElementType().ToElements()
windows = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_Windows).WhereElementIsNotElementType().ToElements()
pS = IN[0]
pars=IN[2]

def get_selected_elements():
	ids = uidoc.Selection.GetElementIds()
	if isinstance(ids, list) == True:
		ids=[ids]
	els = []
	for id in ids:
		el = doc.GetElement(id)
		els.append(el)
	return els
	
rooms = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_Rooms).WhereElementIsNotElementType().ToElements()
#rooms = UnwrapElement(IN[3])
#rooms = get_selected_elements()

def get_S(window):
	h=None
	list=[]
	type = doc.GetElement(window.get_Parameter(BuiltInParameter.ELEM_TYPE_PARAM).AsElementId())
	for par in pars:
		if par[2]=="Т":
			el = type
		else:
			el = window
		w = el.LookupParameter(par[0])
		h = el.LookupParameter(par[1])
		list.append([w,h])
		if w is not None and h is not None:
			S = w.AsDouble()*h.AsDouble()
			break
	return S
def get_id(d1):
	id=0
	try:
		id= d1.Id
	except:
		id=0
	return id		
def to_dict(id,window):
	if id!=0:
		S=get_S(window)
		if id not in dict:
			dict[id]=S
		else:
			dict[id]+=S
	return dict	
def add_S(windows):
	for window in windows:
		phase = doc.GetElement(window.get_Parameter(BuiltInParameter.PHASE_CREATED).AsElementId())
		d1 = window.FromRoom[phase]
		d2 = window.ToRoom[phase]	
		id1 = str(get_id(d1))
		to_dict(id1,window)	
		id2 = str(get_id(d2))
		to_dict(id2,window)
	return dict			
#
dict={}
list=[]
add_S(windows)
add_S(doors)
TransactionManager.Instance.EnsureInTransaction(doc)
for room in rooms:
	if room.Area&gt;0:
		id = room.Id
		if str(id) in dict:
			S = dict[str(id)]
		else:
			S=0		
		bounds = room.GetBoundarySegments(opt)
		for contour in bounds:
			for bound in contour:
				el = doc.GetElement(bound.ElementId)
				if el is not None:					
					type = el.GetType().Name
					if type == 'ModelLine':
						S = S + room.UnboundedHeight*bound.GetCurve().Length
					try:	
						if el.CurtainGrid is not None:
							S = S+room.UnboundedHeight*bound.GetCurve().Length
					except:
						0				
			room.LookupParameter(pS).Set(S)				
TransactionManager.Instance.TransactionTaskDone()		
#Назначьте вывод переменной OUT"""	
OUT = rooms</Script>
    </PythonNodeModels.PythonNode>
    <CoreNodeModels.Input.StringInput guid="3bd3c4eb-5f38-4da9-9d0f-cefc94f2d3bf" type="CoreNodeModels.Input.StringInput" nickname="Площадь проемов" x="-54.7374544539569" y="486.900486594537" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <System.String>ADSK_Площадь проемов</System.String>
      <System.String value="ADSK_Площадь проемов" />
    </CoreNodeModels.Input.StringInput>
    <CoreNodeModels.Input.BoolSelector guid="684976bb-1ed3-444f-a558-977f23aadddf" type="CoreNodeModels.Input.BoolSelector" nickname="Retry" x="-19.0631516352515" y="556.699785096597" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <System.Boolean>False</System.Boolean>
    </CoreNodeModels.Input.BoolSelector>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="5dabee19-16b2-43d7-a8b3-25c73b80be4f" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Параметр ширины, Параметр высоты, Э/Т (Экземпляр/Типоразмер)" x="-435.222914533169" y="706.747124823879" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="{&quot;Примерная ширина&quot;,&quot;Примерная высота&quot;,&quot;Э&quot;};" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="23b153e4-367d-40e7-8c40-5d7eefe39dfc" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Параметр ширины, Параметр высоты, Э/Т (Экземпляр/Типоразмер)" x="-430.805049047864" y="802.956124828364" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="{&quot;Ширина&quot;,&quot;Высота&quot;,&quot;Э&quot;};" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="7de6590a-b6ff-459a-b88a-6de97651c662" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Параметр ширины, Параметр высоты, Э/Т (Экземпляр/Типоразмер)" x="-431.448168596187" y="901.449029023034" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="{&quot;Примерная ширина&quot;,&quot;Примерная высота&quot;,&quot;Т&quot;};" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="9b8a3641-6a64-4a9f-bb50-fbd37b3be69a" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Параметр ширины, Параметр высоты, Э/Т (Экземпляр/Типоразмер)" x="-429.866502391968" y="991.604002663542" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="{&quot;Ширина&quot;,&quot;Высота&quot;,&quot;Т&quot;};" ShouldFocus="false" />
    <CoreNodeModels.CreateList guid="8f3f2a6e-c644-4150-8edc-f81843fdc0a8" type="CoreNodeModels.CreateList" nickname="List.Create" x="66.9851114617853" y="802.727111994153" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="4">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
      <PortInfo index="3" default="False" />
    </CoreNodeModels.CreateList>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="3bd3c4eb-5f38-4da9-9d0f-cefc94f2d3bf" start_index="0" end="355bd92f-0489-4b0b-bfc4-ee36bb207dc4" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="684976bb-1ed3-444f-a558-977f23aadddf" start_index="0" end="355bd92f-0489-4b0b-bfc4-ee36bb207dc4" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="5dabee19-16b2-43d7-a8b3-25c73b80be4f" start_index="0" end="8f3f2a6e-c644-4150-8edc-f81843fdc0a8" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="23b153e4-367d-40e7-8c40-5d7eefe39dfc" start_index="0" end="8f3f2a6e-c644-4150-8edc-f81843fdc0a8" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7de6590a-b6ff-459a-b88a-6de97651c662" start_index="0" end="8f3f2a6e-c644-4150-8edc-f81843fdc0a8" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="9b8a3641-6a64-4a9f-bb50-fbd37b3be69a" start_index="0" end="8f3f2a6e-c644-4150-8edc-f81843fdc0a8" end_index="3" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="8f3f2a6e-c644-4150-8edc-f81843fdc0a8" start_index="0" end="355bd92f-0489-4b0b-bfc4-ee36bb207dc4" end_index="2" portType="0" />
  </Connectors>
  <Notes />
  <Annotations>
    <Dynamo.Graph.Annotations.AnnotationModel guid="c193eb8c-e632-4151-9e69-044567bfbb70" annotationText="Расчет" left="333.145989476484" top="514.590503232323" width="144.8" height="173.8" fontSize="14" InitialTop="544.590503232323" InitialHeight="354.205873853092" TextblockHeight="20" backgrouund="#FF848484">
      <Models ModelGuid="355bd92f-0489-4b0b-bfc4-ee36bb207dc4" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="77482572-7121-4dff-8faa-bd6c3808fd69" annotationText="Наименования параметров" left="-64.7374544539569" top="456.900486594537" width="196" height="97.8" fontSize="14" InitialTop="486.900486594537" InitialHeight="337.157686736703" TextblockHeight="20" backgrouund="#FF48B9FF">
      <Models ModelGuid="3bd3c4eb-5f38-4da9-9d0f-cefc94f2d3bf" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="f5581fc5-5d0e-41fa-a8b2-a2280e431fc8" annotationText="Параметры ширины и высоты окон и дверей" left="-445.222914533169" top="660.747124823879" width="643.008025994954" height="423.456877839663" fontSize="30" InitialTop="706.747124823879" InitialHeight="407.456877839663" TextblockHeight="36" backgrouund="#FFC1D676">
      <Models ModelGuid="5dabee19-16b2-43d7-a8b3-25c73b80be4f" />
      <Models ModelGuid="23b153e4-367d-40e7-8c40-5d7eefe39dfc" />
      <Models ModelGuid="7de6590a-b6ff-459a-b88a-6de97651c662" />
      <Models ModelGuid="9b8a3641-6a64-4a9f-bb50-fbd37b3be69a" />
      <Models ModelGuid="8f3f2a6e-c644-4150-8edc-f81843fdc0a8" />
    </Dynamo.Graph.Annotations.AnnotationModel>
  </Annotations>
  <Presets />
  <Cameras>
    <Camera Name="Фоновый просмотр" eyeX="242.924530029297" eyeY="532.0439453125" eyeZ="-147.189254760742" lookX="-247.924530029297" lookY="-521.0439453125" lookZ="139.189254760742" upX="-0.658090531826019" upY="0.65605902671814" upZ="0.369463741779327" />
  </Cameras>
</Workspace>